{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for resources"
      }
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function App name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account for function and results"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "App Service plan name"
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "drawfunc",
      "metadata": {
        "description": "Blob container name for output storage"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
      "properties": { "publicAccess": "None" },
      "dependsOn": [
        "[parameters('storageAccountName')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "EP1",
        "tier": "ElasticPremium",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "reserved": true,
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": { "type": "SystemAssigned" },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "python" },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4" },
            { "name": "WEBSITE_RUN_FROM_PACKAGE", "value": "https://cloudnetdrawappstorage.blob.core.windows.net/cloudnetdrawapp/function-clean.zip" },
            { "name": "DRAWING_STORAGE_URL", "value": "[format('https://{0}.blob.core.windows.net', parameters('storageAccountName'))]" },
            { "name": "DRAWING_CONTAINER_NAME", "value": "[parameters('containerName')]" },
            { "name": "AzureWebJobsStorage__accountName", "value": "[parameters('storageAccountName')]" }
          ],
          "linuxFxVersion": "Python|3.10"
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/web', parameters('functionAppName'))]",
      "properties": {
        "cors": {
          "allowedOrigins": [
            "https://portal.azure.com"
          ],
          "supportCredentials": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(parameters('functionAppName'), parameters('storageAccountName'))]",
      "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-01-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName'))).defaultHostName)]"
    }
  }
}
